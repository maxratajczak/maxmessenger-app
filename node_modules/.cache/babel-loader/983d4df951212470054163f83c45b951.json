{"ast":null,"code":"var _jsxFileName = \"/Users/maximilian/GitHub/maxmessenger-app/src/components/ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { useRef, useState } from 'react';\nimport ChatMessage from './ChatMessage';\nimport '../css/ChatRoom.css';\nimport chatIcon from '../g-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatRoom = _ref => {\n  _s();\n\n  let {\n    firebase,\n    auth,\n    firestore,\n    user,\n    name\n  } = _ref;\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt');\n  const [messages] = useCollectionData(query, {\n    idField: 'id'\n  });\n  const [formValue, setFormValue] = useState(\"\");\n  const dummyDiv = useRef();\n\n  const sendMessage = async e => {\n    e.preventDefault();\n\n    if (formValue !== \"\") {\n      const {\n        uid,\n        photoURL\n      } = auth.currentUser;\n      await messagesRef.add({\n        text: formValue,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n        photoURL,\n        sentBy: user.displayName\n      });\n      setFormValue(\"\");\n      dummyDiv.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatRoom\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"chatIcon\",\n          src: chatIcon,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"chatRoomName\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages && messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          auth: auth,\n          user: user,\n          message: msg\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 50\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dummyDiv\",\n        ref: dummyDiv\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sendMessageForm\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Type a message...\",\n            type: \"text\",\n            value: formValue,\n            onChange: e => setFormValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sendButton\",\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sendMessageForm\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Log in to send a message\",\n            disabled: true,\n            type: \"text\",\n            value: formValue,\n            onChange: e => setFormValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sendButton disabled\",\n            disabled: true,\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatRoom, \"S7Roa1QvFBvqHbquQtTYERsHGPE=\", false, function () {\n  return [useCollectionData];\n});\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/Users/maximilian/GitHub/maxmessenger-app/src/components/ChatRoom.js"],"names":["useCollectionData","useRef","useState","ChatMessage","chatIcon","ChatRoom","firebase","auth","firestore","user","name","messagesRef","collection","query","orderBy","messages","idField","formValue","setFormValue","dummyDiv","sendMessage","e","preventDefault","uid","photoURL","currentUser","add","text","createdAt","FieldValue","serverTimestamp","sentBy","displayName","current","scrollIntoView","behavior","map","msg","id","target","value"],"mappings":"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","sourcesContent":["import { useCollectionData } from 'react-firebase-hooks/firestore'\nimport { useRef, useState } from 'react';\nimport ChatMessage from './ChatMessage';\nimport '../css/ChatRoom.css'\nimport chatIcon from '../g-icon.png'\n\nconst ChatRoom = ({firebase, auth, firestore, user, name}) => {\n    const messagesRef = firestore.collection('messages');\n    const query = messagesRef.orderBy('createdAt');\n\n    const [messages] = useCollectionData(query, {idField: 'id'});\n    const [formValue, setFormValue] = useState(\"\");\n    const dummyDiv = useRef();\n    \n    const sendMessage = async(e) => {\n        e.preventDefault();\n        if(formValue !== \"\") {\n            const { uid, photoURL } = auth.currentUser;\n\n            await messagesRef.add({\n                text: formValue,\n                createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n                uid,\n                photoURL,\n                sentBy: user.displayName\n            });\n            setFormValue(\"\")\n\n            dummyDiv.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n        \n    }\n    \n    return (\n    <div className='ChatRoom'>\n        \n        <div className='chat'>\n            <div className='topBar'>\n                <img className='chatIcon' src={chatIcon} alt=\"\" />\n                <h4 className='chatRoomName'>{name}</h4>\n            </div>\n            <div>\n                {messages && messages.map(msg => <ChatMessage auth={auth} user={user} key={msg.id} message={msg}/>)}\n            </div>\n            <div className='dummyDiv' ref={dummyDiv}></div>\n            {user ? \n            <div className='sendMessageForm'>\n                <form onSubmit={sendMessage}>\n                    <input placeholder='Type a message...' type=\"text\" value={formValue} onChange={(e) => setFormValue(e.target.value)} />\n                    <button className='sendButton' type='submit'>Send</button>\n                </form>\n            </div>\n            :\n            <div className='sendMessageForm'>\n                <form onSubmit={sendMessage}>\n                    <input placeholder='Log in to send a message' disabled type=\"text\" value={formValue} onChange={(e) => setFormValue(e.target.value)} />\n                    <button className='sendButton disabled' disabled type='submit'>Send</button>\n                </form>\n            </div>\n            }\n        </div>\n    </div>\n    )\n}\n \nexport default ChatRoom;"]},"metadata":{},"sourceType":"module"}